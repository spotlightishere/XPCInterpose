// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 56;
	objects = {

/* Begin PBXBuildFile section */
		422AB31C2A13066D00B90CAD /* Frida.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 422AB3162A13066D00B90CAD /* Frida.framework */; };
		422AB32B2A13113800B90CAD /* Frida.framework in Embed Libraries */ = {isa = PBXBuildFile; fileRef = 422AB3162A13066D00B90CAD /* Frida.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		42A5F0042A12A50F00E5E41C /* README.md in Resources */ = {isa = PBXBuildFile; fileRef = 42A5F0032A12A50F00E5E41C /* README.md */; };
		42DB30DB2A129B3A00387650 /* XPCInterposeApp.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42DB30DA2A129B3A00387650 /* XPCInterposeApp.swift */; };
		42DB30DD2A129B3A00387650 /* ContentView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42DB30DC2A129B3A00387650 /* ContentView.swift */; };
		42DB30DF2A129B3A00387650 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 42DB30DE2A129B3A00387650 /* Assets.xcassets */; };
		42DB30E22A129B3A00387650 /* Preview Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 42DB30E12A129B3A00387650 /* Preview Assets.xcassets */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		422AB31A2A13066D00B90CAD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 42DB30CF2A129B3A00387650 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 422AB3152A13066D00B90CAD;
			remoteInfo = UniversalFrida;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		422EF6012A12CCE600B6C594 /* Embed Libraries */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
				422AB32B2A13113800B90CAD /* Frida.framework in Embed Libraries */,
			);
			name = "Embed Libraries";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		422AB3162A13066D00B90CAD /* Frida.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Frida.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		422AB3242A1306DB00B90CAD /* FridaDevkits.xcfilelist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcfilelist; path = FridaDevkits.xcfilelist; sourceTree = "<group>"; };
		422AB3252A1306DB00B90CAD /* UniversalFrida.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; path = UniversalFrida.xcconfig; sourceTree = "<group>"; };
		422AB32A2A130A2F00B90CAD /* frida-swift */ = {isa = PBXFileReference; lastKnownFileType = folder; path = "frida-swift"; sourceTree = "<group>"; };
		42A5F0032A12A50F00E5E41C /* README.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = SOURCE_ROOT; };
		42DB30D72A129B3A00387650 /* XPCInterpose.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = XPCInterpose.app; sourceTree = BUILT_PRODUCTS_DIR; };
		42DB30DA2A129B3A00387650 /* XPCInterposeApp.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XPCInterposeApp.swift; sourceTree = "<group>"; };
		42DB30DC2A129B3A00387650 /* ContentView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContentView.swift; sourceTree = "<group>"; };
		42DB30DE2A129B3A00387650 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		42DB30E12A129B3A00387650 /* Preview Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = "Preview Assets.xcassets"; sourceTree = "<group>"; };
		42DB30E32A129B3A00387650 /* XPCInterpose.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = XPCInterpose.entitlements; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		42DB30D42A129B3A00387650 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				422AB31C2A13066D00B90CAD /* Frida.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		422AB3172A13066D00B90CAD /* UniversalFrida */ = {
			isa = PBXGroup;
			children = (
				422AB32A2A130A2F00B90CAD /* frida-swift */,
				422AB3242A1306DB00B90CAD /* FridaDevkits.xcfilelist */,
				422AB3252A1306DB00B90CAD /* UniversalFrida.xcconfig */,
			);
			path = UniversalFrida;
			sourceTree = "<group>";
		};
		42DB30CE2A129B3A00387650 = {
			isa = PBXGroup;
			children = (
				42DB30D92A129B3A00387650 /* XPCInterpose */,
				422AB3172A13066D00B90CAD /* UniversalFrida */,
				42DB30D82A129B3A00387650 /* Products */,
			);
			sourceTree = "<group>";
		};
		42DB30D82A129B3A00387650 /* Products */ = {
			isa = PBXGroup;
			children = (
				42DB30D72A129B3A00387650 /* XPCInterpose.app */,
				422AB3162A13066D00B90CAD /* Frida.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		42DB30D92A129B3A00387650 /* XPCInterpose */ = {
			isa = PBXGroup;
			children = (
				42A5F0032A12A50F00E5E41C /* README.md */,
				42DB30DA2A129B3A00387650 /* XPCInterposeApp.swift */,
				42DB30DC2A129B3A00387650 /* ContentView.swift */,
				42DB30DE2A129B3A00387650 /* Assets.xcassets */,
				42DB30E32A129B3A00387650 /* XPCInterpose.entitlements */,
				42DB30E02A129B3A00387650 /* Preview Content */,
			);
			path = XPCInterpose;
			sourceTree = "<group>";
		};
		42DB30E02A129B3A00387650 /* Preview Content */ = {
			isa = PBXGroup;
			children = (
				42DB30E12A129B3A00387650 /* Preview Assets.xcassets */,
			);
			path = "Preview Content";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		422AB3152A13066D00B90CAD /* UniversalFrida */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 422AB31E2A13066D00B90CAD /* Build configuration list for PBXNativeTarget "UniversalFrida" */;
			buildPhases = (
				422AB3222A13069100B90CAD /* Download Frida Devkits */,
				422AB3232A1306AC00B90CAD /* Build Frida Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = UniversalFrida;
			productName = UniversalFrida;
			productReference = 422AB3162A13066D00B90CAD /* Frida.framework */;
			productType = "com.apple.product-type.framework";
		};
		42DB30D62A129B3A00387650 /* XPCInterpose */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 42DB30E62A129B3A00387650 /* Build configuration list for PBXNativeTarget "XPCInterpose" */;
			buildPhases = (
				42DB30D32A129B3A00387650 /* Sources */,
				42DB30D42A129B3A00387650 /* Frameworks */,
				42DB30D52A129B3A00387650 /* Resources */,
				422EF6012A12CCE600B6C594 /* Embed Libraries */,
			);
			buildRules = (
			);
			dependencies = (
				422AB31B2A13066D00B90CAD /* PBXTargetDependency */,
			);
			name = XPCInterpose;
			productName = XPCInterpose;
			productReference = 42DB30D72A129B3A00387650 /* XPCInterpose.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		42DB30CF2A129B3A00387650 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				KnownAssetTags = (
					New,
				);
				LastSwiftUpdateCheck = 1430;
				LastUpgradeCheck = 1430;
				TargetAttributes = {
					422AB3152A13066D00B90CAD = {
						CreatedOnToolsVersion = 14.3;
					};
					42DB30D62A129B3A00387650 = {
						CreatedOnToolsVersion = 14.3;
					};
				};
			};
			buildConfigurationList = 42DB30D22A129B3A00387650 /* Build configuration list for PBXProject "XPCInterpose" */;
			compatibilityVersion = "Xcode 14.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 42DB30CE2A129B3A00387650;
			productRefGroup = 42DB30D82A129B3A00387650 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				42DB30D62A129B3A00387650 /* XPCInterpose */,
				422AB3152A13066D00B90CAD /* UniversalFrida */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		42DB30D52A129B3A00387650 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				42A5F0042A12A50F00E5E41C /* README.md in Resources */,
				42DB30E22A129B3A00387650 /* Preview Assets.xcassets in Resources */,
				42DB30DF2A129B3A00387650 /* Assets.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		422AB3222A13069100B90CAD /* Download Frida Devkits */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Download Frida Devkits";
			outputFileListPaths = (
				"$(SRCROOT)/UniversalFrida/FridaDevkits.xcfilelist",
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = "/bin/bash -e";
			shellScript = "# All devkit filenames are provided by our output file list.\nfilelist_path=$SCRIPT_OUTPUT_FILE_LIST_0\n\n# Loop through all lines/files in our output file list.\nwhile read -r current_output_path; do\n    # We expect current_output_path to contain an expanded form of something such as\n    # $(DERIVED_FILE_DIR)/frida-core-devkit-$(FRIDA_VERSION)-macos-arm64.tar.xz.\n    # Our resulting base name should be in the form of \"frida-core-devkit-$(FRIDA_VERSION)-macos-arm64.tar.xz\".\n    devkit_filename=$(basename $current_output_path)\n\n    # We have FRIDA_VERSION from this target's user-defined build setting.\n    # Please update the version there instead of hardcoding here!\n    frida_url=\"https://github.com/frida/frida/releases/download/${FRIDA_VERSION}/${devkit_filename}\"\n    curl $frida_url -o $current_output_path -L\ndone < $filelist_path\n\n# Lastly, Xcode seems to want us to have output.\ntouch -d 1970-01-0100:00:00Z ${DERIVED_FILE_DIR}/frida_version\n";
		};
		422AB3232A1306AC00B90CAD /* Build Frida Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"$(SRCROOT)/UniversalFrida/frida-swift",
				"$(DERIVED_FILE_DIR)/frida_version",
			);
			name = "Build Frida Frameworks";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/merged_framework",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = "/bin/bash -e";
			shellScript = "# Our input file - $(SRCROOT)/UniversalFrida/frida-swift - is our\n# base framework source code. We'll make a copy of it per architecture.\noriginal_frida_swift=$SCRIPT_INPUT_FILE_0\n\n# Let's create an array of architectures based off $ARCHS_STANDARD.\n# We'll use this to iterate through all possible devkits.\nDEVKIT_ARCHS=($ARCHS_STANDARD)\n\n# We don't use the devkit filenames are provided by our output file list:\n# instead, we assume that every architecture under $ARCHS_STANDARD has a devkit.\n# (Please modify the list to match such, should it not!)\n# We specify it to ensure frameworks are rebuilt if the devkit file list changes.\nfor current_arch in ${DEVKIT_ARCHS[@]}; do\n    # Previously, we assumed $(DERIVED_FILE_DIR)/frida-core-devkit-$(FRIDA_VERSION)-macos-$(ARCH).tar.xz.\n    # We'll assume the same here.\n    devkit_path=\"${DERIVED_FILE_DIR}/frida-core-devkit-${FRIDA_VERSION}-macos-${current_arch}.tar.xz\"\n    \n    # We'll make a copy of the frida-swift source for this architecture.\n    frida_swift_path=\"${DERIVED_FILE_DIR}/frida-swift-${current_arch}\"\n    cp -r $original_frida_swift $frida_swift_path\n    # Next, extract the devkit to the CFrida dir.\n    tar -xvf $devkit_path -C $frida_swift_path/CFrida\n    # Lastly, build!\n    cd $frida_swift_path\n    # TODO: SWIFT_INSTALL_OBJC_HEADER is a hack to avoid https://github.com/apple/swift/issues/64669\n    xcodebuild DISABLE_MANUAL_TARGET_ORDER_BUILD_WARNING=YES OTHER_SWIFT_FLAGS=-no-verify-emitted-module-interface -arch $current_arch -configuration $CONFIGURATION\ndone\n\n######################\n# Framework creation #\n######################\n# Helper function to get architecture-specific framework path\nfrida_framework_path() {\n    echo \"${DERIVED_FILE_DIR}/frida-swift-$1/build/${CONFIGURATION}/Frida.framework\"\n}\n\n# Now that we've built every architecture's framework, we'll create our own.\narchs_count=${#DEVKIT_ARCHS[@]}\n\n# We'll use the first architecture as a basis for the framework.\nproduct_framework_path=\"${BUILD_DIR}/${CONFIGURATION}/Frida.framework\"\nfirst_arch=${DEVKIT_ARCHS[0]}\n\n# Copy the first architecture over as our emitted product.\ncp -a $(frida_framework_path $first_arch)/* $product_framework_path\n\n# For all remaining frameworks, copy Swift module information, and use lipo to merge the framework binary.\nfor ((i=1; i < archs_count; i++)); do\n    current_arch=${DEVKIT_ARCHS[i]}\n    current_framework_path=$(frida_framework_path $current_arch)\n    # Merge Swift module information.\n    cp -r $current_framework_path/Versions/A/Modules/Frida.swiftmodule/* $product_framework_path/Versions/A/Modules/Frida.swiftmodule\n    # Lipo the two together.\n    lipo $product_framework_path/Versions/A/Frida $current_framework_path/Versions/A/Frida -output $product_framework_path/Versions/A/Frida -create\ndone\n\n# Mark that we've built.\ntouch -d 1970-01-0100:00:00Z ${DERIVED_FILE_DIR}/merged_framework\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		42DB30D32A129B3A00387650 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				42DB30DD2A129B3A00387650 /* ContentView.swift in Sources */,
				42DB30DB2A129B3A00387650 /* XPCInterposeApp.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		422AB31B2A13066D00B90CAD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 422AB3152A13066D00B90CAD /* UniversalFrida */;
			targetProxy = 422AB31A2A13066D00B90CAD /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		422AB31F2A13066D00B90CAD /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 422AB3252A1306DB00B90CAD /* UniversalFrida.xcconfig */;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_MODULE_VERIFIER = YES;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				MODULE_VERIFIER_SUPPORTED_LANGUAGES = "objective-c objective-c++";
				MODULE_VERIFIER_SUPPORTED_LANGUAGE_STANDARDS = "gnu11 gnu++20";
				PRODUCT_BUNDLE_IDENTIFIER = re.frida.UniversalFrida;
				PRODUCT_NAME = Frida;
				SKIP_INSTALL = YES;
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		422AB3202A13066D00B90CAD /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 422AB3252A1306DB00B90CAD /* UniversalFrida.xcconfig */;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_MODULE_VERIFIER = YES;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				MODULE_VERIFIER_SUPPORTED_LANGUAGES = "objective-c objective-c++";
				MODULE_VERIFIER_SUPPORTED_LANGUAGE_STANDARDS = "gnu11 gnu++20";
				PRODUCT_BUNDLE_IDENTIFIER = re.frida.UniversalFrida;
				PRODUCT_NAME = Frida;
				SKIP_INSTALL = YES;
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		42DB30E42A129B3A00387650 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 13.3;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		42DB30E52A129B3A00387650 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 13.3;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		42DB30E72A129B3A00387650 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_ENTITLEMENTS = XPCInterpose/XPCInterpose.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_ASSET_PATHS = "\"XPCInterpose/Preview Content\"";
				ENABLE_PREVIEWS = YES;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_KEY_CFBundleDisplayName = "XPC Interpose";
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = space.joscomputing.XPCInterpose;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		42DB30E82A129B3A00387650 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_ENTITLEMENTS = XPCInterpose/XPCInterpose.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_ASSET_PATHS = "\"XPCInterpose/Preview Content\"";
				ENABLE_PREVIEWS = YES;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_KEY_CFBundleDisplayName = "XPC Interpose";
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = space.joscomputing.XPCInterpose;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		422AB31E2A13066D00B90CAD /* Build configuration list for PBXNativeTarget "UniversalFrida" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				422AB31F2A13066D00B90CAD /* Debug */,
				422AB3202A13066D00B90CAD /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		42DB30D22A129B3A00387650 /* Build configuration list for PBXProject "XPCInterpose" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				42DB30E42A129B3A00387650 /* Debug */,
				42DB30E52A129B3A00387650 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		42DB30E62A129B3A00387650 /* Build configuration list for PBXNativeTarget "XPCInterpose" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				42DB30E72A129B3A00387650 /* Debug */,
				42DB30E82A129B3A00387650 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 42DB30CF2A129B3A00387650 /* Project object */;
}
